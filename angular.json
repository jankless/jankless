{
  "version": 1,
  "projects": {
    "docs": {
      "projectType": "application",
      "root": "apps/docs",
      "sourceRoot": "apps/docs/src",
      "prefix": "jankless",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/docs",
            "index": "apps/docs/src/index.html",
            "main": "apps/docs/src/main.ts",
            "polyfills": "apps/docs/src/polyfills.ts",
            "tsConfig": "apps/docs/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": ["apps/docs/src/favicon.ico", "apps/docs/src/assets"],
            "styles": ["apps/docs/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/docs/src/environments/environment.ts",
                  "with": "apps/docs/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "docs:build:production"
            },
            "development": {
              "browserTarget": "docs:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "docs:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/docs/src/**/*.ts", "apps/docs/src/**/*.html"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/docs"],
          "options": {
            "jestConfig": "apps/docs/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "html": {
      "projectType": "library",
      "root": "libs/html",
      "sourceRoot": "libs/html/src",
      "prefix": "jankless",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "outputs": ["dist/libs/html"],
          "options": {
            "project": "libs/html/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/html/tsconfig.lib.prod.json"
            },
            "development": {
              "tsConfig": "libs/html/tsconfig.lib.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/html"],
          "options": {
            "jestConfig": "libs/html/jest.config.js",
            "passWithNoTests": true
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/html/src/**/*.ts", "libs/html/src/**/*.html"]
          }
        }
      },
      "tags": []
    },
    "ui": {
      "projectType": "library",
      "root": "libs/ui",
      "sourceRoot": "libs/ui/src",
      "prefix": "jankless",
      "architect": {
        "build": {
          "builder": "@nrwl/angular:package",
          "outputs": ["dist/libs/ui"],
          "options": {
            "project": "libs/ui/ng-package.json"
          },
          "configurations": {
            "production": {
              "tsConfig": "libs/ui/tsconfig.lib.prod.json"
            },
            "development": {
              "tsConfig": "libs/ui/tsconfig.lib.json"
            }
          },
          "defaultConfiguration": "production"
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/ui"],
          "options": {
            "jestConfig": "libs/ui/jest.config.js",
            "passWithNoTests": true
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/ui/src/**/*.ts", "libs/ui/src/**/*.html"]
          }
        }
      },
      "tags": []
    },
    "www": {
      "projectType": "application",
      "root": "apps/www",
      "sourceRoot": "apps/www/src",
      "prefix": "jankless",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/www",
            "index": "apps/www/src/index.html",
            "main": "apps/www/src/main.ts",
            "polyfills": "apps/www/src/polyfills.ts",
            "tsConfig": "apps/www/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": ["apps/www/src/favicon.ico", "apps/www/src/assets"],
            "styles": ["apps/www/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/www/src/environments/environment.ts",
                  "with": "apps/www/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "www:build:production"
            },
            "development": {
              "browserTarget": "www:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "www:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["apps/www/src/**/*.ts", "apps/www/src/**/*.html"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/www"],
          "options": {
            "jestConfig": "apps/www/jest.config.js",
            "passWithNoTests": true
          }
        },
        "sync": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "aws s3 sync dist/apps/www s3://{args.bucket} --acl public-read --delete --cache-control max-age=604800"
          }
        },
        "invalidate": {
          "builder": "@nrwl/workspace:run-commands",
          "options": {
            "command": "aws cloudfront create-invalidation --distribution-id {args.id} --paths /index.html"
          }
        }
      },
      "tags": []
    }
  }
}
